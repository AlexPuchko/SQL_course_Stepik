Вставить данные из одной таблицы в другую:
INSERT INTO book (author, title, price, amount)
SELECT author, title, price, amount
FROM supply
WHERE author != 'Булгаков М.А.' AND author!= 'Достоевский Ф.М.';

Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.
INSERT INTO book (author, title, price, amount)
SELECT author, title, price, amount
FROM supply
WHERE author NOT IN (SELECT author FROM book);

В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, 
чтобы оно не превышало количество экземпляров книг, указанных в столбце amount. 
А цену тех книг, которые покупатель не заказывал, снизить на 10%.
UPDATE book
SET 
buy = 
    IF (buy > amount, amount, buy),
price = 
	IF (buy = 0, 0.9 * price, price);

Для тех книг в таблице book , которые есть в таблице supply, не только увеличить их количество в таблице book 
( увеличить их количество на значение столбца amountтаблицы supply), но и пересчитать их цену 
(для каждой книги найти сумму цен из таблиц book и supply и разделить на 2).
UPDATE book, supply
SET 
book.amount = book.amount + supply.amount,
book.price = (book.price + supply.price)/2
WHERE book.author=supply.author AND book.title = supply.title

Удалить из таблицы supply книги тех авторов, 
общее количество экземпляров книг которых в таблице book превышает 10.
DELETE FROM supply
WHERE author IN
(SELECT author 
 FROM book 
 GROUP BY author
 HAVING SUM(amount)>10
);

Создание одной таблицы на основе другой:
CREATE TABLE ordering AS 
SELECT author, title,
ROUND((SELECT AVG(amount) from book),0) AS amount
FROM book 
WHERE amount < (SELECT AVG(amount) from book);

Final task:
Делаем скидку 5% на самое большое количество экземпляров книг (Стихи Есенина), чтобы поскорее расходились.
SELECT author, title, amount,
       ROUND(price * 0.95,2) AS new_price
FROM book
WHERE amount = (SELECT MAX(amount) FROM book);



